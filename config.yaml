env_name: !!str lava                        # Enironment to use, in (lava[_perc, _ng], lava2, lava3, lava4)
agent_name: !!str sarsa                 # the agent name
seed: !!int 12345                           # random initialization seed
no_render: !!bool False                     # Deactivate rendering of environment evaluation
eval_eps: !!int 100                         # After how many episodes to evaluate

agents:
  q_learning:
    env_max_steps: !!int 100                 # Maximal steps in environment before termination.
    episodes: !!int 10_000                   # Number of training episodes
    agent_eps_decay: !!str linear            # Epsilon decay schedule, in (linear, log, const)
    agent_eps: !!float 1.0                   # Epsilon value. Used as start value when decay linear or log. Otherwise constant value.

  double_q_learning:
    env_max_steps: !!int 100                 # Maximal steps in environment before termination.
    episodes: !!int 100_000                   # Number of training episodes
    agent_eps_decay: !!str linear            # Epsilon decay schedule, in (linear, log, const)
    agent_eps: !!float 1.0                   # Epsilon value. Used as start value when decay linear or log. Otherwise constant value.

  sarsa:
    env_max_steps: !!int 100                 # Maximal steps in environment before termination.
    episodes: !!int 10_000                   # Number of training episodes
    agent_eps_decay: !!str linear            # Epsilon decay schedule, in (linear, log, const)
    agent_eps: !!float 1.0                   # Epsilon value. Used as start value when decay linear or log. Otherwise constant value.

envs:
  lava:
    example: !!int 0                         # todo
